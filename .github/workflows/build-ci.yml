name: Build CI and Deploy
on:
  push:
    branches:
      - main  # Replace with the appropriate branch name

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: --name=mongodb
    env:
      MONGODB_URL: mongodb://localhost:27017/acebook_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run lint and unit tests
        run: |
          npm run lint
          npm run test:unit
      - name: Run integration tests
        uses: cypress-io/github-action@v6
        with:
          config-file: cypress.config.js
          start: npm run start:ci

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    env:
      INSTANCE_IP: ${{ secrets.EC2_1_IP }}
      INSTANCE_IP_TWO: ${{ secrets.EC2_2_IP }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_INSTANCE_SG_ID: sg-0ed305e22ac5d52a6
    defaults:
      run:
        working-directory: ./
    steps:
      - name: Check out the repository to the runner
        uses: actions/checkout@v3
      - name: List Repository Contents
        run: ls -R
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region eu-west-2
      - name: Get runner IP address
        id: ip
        uses: haythem/public-ip@v1.2
      - name: Whitelist runner IP address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
      - name: Call a Bash Script
        run: |
          chmod +x scripts/deploy-to-instance.sh
          ./scripts/deploy-to-instance.sh
      - name: Revoke runner IP address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
